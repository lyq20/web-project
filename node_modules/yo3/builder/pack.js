/**
 * 打包脚本
 * 因为 ykit 不支持指定配置文件，所以这里用了更改文件名的方式
 */
'use strict';
var fs = require('fs');
var child_process = require('child_process')

function copyFileSync(src, dest) {
    fs.writeFileSync(dest, fs.readFileSync(src, 'utf-8'));
}

function spawnAsync(command) {
    var _command = command.split(' ')[0];
    var _args = command.split(' ').slice(1);
    var pCommand = child_process.spawn(_command, _args);
    return new Promise((resolve, reject) => {
        pCommand.stdout.on('data', function(data) {
            console.log(data.toString());
        });

        pCommand.stderr.on('data', function(data) {
            console.error(data.toString());
        });

        pCommand.on('close', function(code) {
            resolve(code);
        })
    });
}

function clear(path) {
    var files = fs.readdirSync(path);
    files.forEach(function(file) {
        var curPath = path + '/' + file;
        if(fs.statSync(curPath).isFile()) {
            fs.unlinkSync(curPath);
        }
    });
}

var commandPack = 'ykit pack -c false';
var commandPackMin = 'ykit pack -m -c false';
clear('dist');
fs.renameSync('ykit.js', '_ykit.js');
copyFileSync('_ykit.react.js', 'ykit.js');
console.log('正在打包react版本...');
spawnAsync(commandPack).then(function() {
        return spawnAsync(commandPackMin)
    }).then(function() {
        fs.unlinkSync('./dist/yo3.react.css');
        fs.unlinkSync('./dist/yo3.react.css.map');
        fs.unlinkSync('./dist/yo3.react.min.css');
        copyFileSync('_ykit.qreact.js', 'ykit.js');
    }).then(function() {
        console.log('正在打包qreact版本...');
        return spawnAsync(commandPack)
    }).then(function() {
        return spawnAsync(commandPackMin)
    }).then(function() {
        fs.unlinkSync('ykit.js');
        fs.renameSync('_ykit.js', 'ykit.js');
        fs.unlinkSync('./dist/yo3.qreact.css');
        fs.unlinkSync('./dist/yo3.qreact.css.map');
        fs.unlinkSync('./dist/yo3.qreact.min.css');
        console.log('完成~')
    }).catch(function(err) {
        console.error(error);
    });